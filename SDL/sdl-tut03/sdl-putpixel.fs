\ ===[ Code Addendum 01 ]============================================
\             gforth: SDL/OpenGL Graphics Part III
\ ===================================================================
\    File Name: sdl-putpixel.fs
\       Author: Timothy Trussell
\         Date: 02/18/2010
\  Description: SDL PutPixel primitive
\ Forth System: gforth-0.7.0
\ Linux System: Ubuntu v9.10 i386, kernel 2.6.31-19
\ C++ Compiler: gcc (Ubuntu 4.4.1-4ubuntu9) 4.4.1
\ ===================================================================

\ ---[ Prototypes ]--------------------------------------------------
\ PutPixel              { *dst x y c -- }
\ ------------------------------------------------[End Prototypes]---

\ PutPixel accesses the <pitch> and <pixel> fields of the sdl-surface
\ structure, which is defined in the sdl.fs file.

\ <pitch> defines the window-width of the surface
\ <pixel> is a pointer to the actual memory for the surface data

\ Note that the window-width <pitch> represents is generated by the
\ SDL video subsystem, not by the call to InitGraph which we make to
\ create a display window.

\ ---[ PutPixel ]----------------------------------------------------

: PutPixel { *dst _x _y _pixel -- }
  \ Lock the surface if required
  *dst sdl-mustlock if
    *dst sdl-locksurface drop
  then
  \ Calculate the target address of the pixel
  *dst sdl-surface-pixels @     \ *pixels            32-bit pointer
  *dst sdl-surface-pitch sw@    \ *pixels swidth       16-bit value
  _y * +                        \ *pixels[swidth*y]
  *dst sdl-surface-format @     \ *pixels[swidth*y] *format
  sdl-pixelformat-bytesperpixel \ *pixels[swidth*y] *format->bytepp
  C@                            \ *pixels[swidth*y] bytepp
  dup >R                        \ *pixels[swidth*y] bytepp
  _x * +                        \ *pixels[ofs]
  R>                            \ *pixels[ofs] bytepp
  case                          \ *pixels[ofs]
    1 of _pixel swap C! endof
    2 of _pixel swap w! endof
    3 of SDL_BYTEORDER SDL_BIG_ENDIAN = if
           _pixel 16 RSHIFT over C! 1+
           _pixel 8 RSHIFT over C! 1+
           _pixel swap C!
         else
           _pixel over C! 1+
           _pixel 8 RSHIFT over C! 1+
           _pixel 16 RSHIFT swap C!
         then
      endof
    4 of _pixel swap ! endof
  endcase
  \ Now unlock the surface if required
  *dst sdl-mustlock if
    *dst sdl-unlocksurface
  then
;
